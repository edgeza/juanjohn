version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: autonama_postgres
    environment:
      POSTGRES_DB: autonama
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./autonama.data/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d autonama"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - autonama_network

  # Redis for caching and Celery broker
  redis:
    image: redis:7-alpine
    container_name: autonama_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - autonama_network

  # Celery Worker for data processing
  celery_worker:
    build:
      context: ./autonama.api
      dockerfile: Dockerfile
    container_name: autonama_celery_worker
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/autonama
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./autonama.api:/app
      - ./autonama.web/public/data:/app/public/data:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A celery_app worker --loglevel=info
    networks:
      - autonama_network

  # Celery Beat for scheduled tasks
  celery_beat:
    build:
      context: ./autonama.api
      dockerfile: Dockerfile
    container_name: autonama_celery_beat
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/autonama
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./autonama.api:/app
      - ./autonama.web/public/data:/app/public/data:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A celery_app beat --loglevel=info --schedule /tmp/celerybeat-schedule
    networks:
      - autonama_network

  # FastAPI Backend
  api:
    build:
      context: ./autonama.api
      dockerfile: Dockerfile
    container_name: autonama_api
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/autonama
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=autonama
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DUCKDB_PATH=/app/data/duckdb/
      - DOCKER_CONTAINER=true
      - TWELVEDATA_API_KEY=${TWELVEDATA_API_KEY:-}
      - BINANCE_API_KEY=${BINANCE_API_KEY:-}
      - BINANCE_SECRET_KEY=${BINANCE_SECRET_KEY:-}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      # Stripe / Access Control
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3001}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-}
      - STRIPE_PRICE_ID=${STRIPE_PRICE_ID:-}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-}
      - ADMIN_ACCESS_TOKEN=${ADMIN_ACCESS_TOKEN:-}
      # Seed a default admin (optional)
      - DEFAULT_ADMIN_USERNAME=${DEFAULT_ADMIN_USERNAME:-}
      - DEFAULT_ADMIN_PASSWORD=${DEFAULT_ADMIN_PASSWORD:-}
      - DEFAULT_ADMIN_EMAIL=${DEFAULT_ADMIN_EMAIL:-}
    volumes:
      - ./autonama.api:/app
      - ./autonama.web/public/data:/app/public/data:ro
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_started
    networks:
      - autonama_network

  # Next.js Frontend
  web:
    build:
      context: ./autonama.web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
        NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://localhost:8000}
    container_name: autonama_web
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    ports:
      - "3001:3001"
    depends_on:
      api:
        condition: service_started
    networks:
      - autonama_network

  # Flower for Celery monitoring (optional)
  flower:
    build:
      context: ./autonama.api
      dockerfile: Dockerfile
    container_name: autonama_flower
    environment:
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_started
    command: celery -A celery_app flower --port=5555
    networks:
      - autonama_network

volumes:
  postgres_data:
  redis_data:

networks:
  autonama_network:
    driver: bridge 
